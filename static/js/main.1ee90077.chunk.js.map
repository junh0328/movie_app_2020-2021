{"version":3,"sources":["components/Movie.js","pages/Home.js","pages/Detail.js","components/Navigation.js","reducer/movies.js","pages/HomeChanged.js","App.js","reducer/index.js","sagas/movies.js","sagas/index.js","index.js"],"names":["Movie","id","year","title","summary","poster","genres","className","to","pathname","state","src","alt","map","genre","index","key","slice","Home","isLoading","movies","getMovies","a","axios","get","data","setState","this","console","log","movie","medium_cover_image","React","Component","Detail","props","location","history","undefined","push","Navigation","initialState","loadMovieLoading","loadMovieDone","loadMovieError","action","produce","draft","type","concat","error","HomeChanged","useSelector","useState","pageNumber","setPageNumber","dispatch","useDispatch","useEffect","handleScroll","scrollHeight","document","documentElement","scrollTop","clientHeight","window","addEventListener","removeEventListener","App","path","exact","component","rootReducer","combineReducers","loadMovies","watchLoadMovies","movieSaga","loadMoviesAPI","call","result","put","response","takeLatest","all","fork","rootSaga","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.1ee90077.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport \"./Movie.css\";\n\nfunction Movie({ id, year, title, summary, poster, genres }) {\n  return (\n    <div className=\"movie\">\n      <Link\n        to={{\n          pathname: `/movie/${id}`,\n          state: {\n            year,\n            title,\n            summary,\n            poster,\n            genres,\n          },\n        }}\n      >\n        <img src={poster} alt={title} title={title} />\n        <div className=\"movie__data\">\n          <h3 className=\"movie__title\">{title}</h3>\n          <h5 className=\"movie__year\">{year}</h5>\n          <ul className=\"movie__genres\">\n            {genres.map((genre, index) => (\n              <li key={index} className=\"genres__genre\">\n                {genre}\n              </li>\n            ))}\n          </ul>\n          <p className=\"movie__summary\">{summary.slice(0, 180)}...</p>\n        </div>\n      </Link>\n    </div>\n  );\n}\n\nMovie.propTypes = {\n  id: PropTypes.number.isRequired,\n  year: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  summary: PropTypes.string.isRequired,\n  poster: PropTypes.string.isRequired,\n  genres: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default Movie;\n","import React from 'react';\nimport axios from 'axios';\nimport Movie from '../components/Movie';\nimport './Home.css';\n\n/* \n  state는 함수형이 아닌, 클래스형 컴포넌트에서 다루는 개념이다.\n  클래스형 컴포넌트가 되기 위해서는 Home 클래스가 리액트가 제공하는 Component 클래스를 반드시 상속받아야 한다.\n  Home 클래스는 함수형이 아닌 클래스형이기 때문에 return문을 사용하여 나타낼 수 없기 때문에, render() 함수를 사용하여\n  JSX를 반환하게 된다.\n  클래스형 컴포넌트를 사용하는 이유는 오로지 state를 사용하기 위함이다.\n*/\n\nclass Home extends React.Component {\n  state = {\n    isLoading: true,\n    movies: [],\n  };\n  getMovies = async () => {\n    // 실제 movies가 키값이 들어있는 곳이 data.data.movies 이기 때문에 다음과 같이 나타냈다. const {data:{data:{movies},}} = await.axios.get(\"url\")\n    const {\n      data: {\n        data: { movies },\n      },\n    } = await axios.get('https://yts-proxy.now.sh/list_movies.json?limit=10&&sort_by=download_count');\n    this.setState({ movies, isLoading: false });\n    //this.setState({movies: movies}) 의 구조 (state, 구조 분해 할당으로 얻은 영화데이거 있는 변수)였으나 ES6에 따라 대입할 키와 변수 값이 같을 경우 생략하므로 movies만 사용하게 되었다.\n  };\n  componentDidMount() {\n    this.getMovies();\n  }\n  render() {\n    const { isLoading, movies } = this.state;\n    console.log(movies);\n    return (\n      <section className=\"container\">\n        {isLoading ? (\n          <div className=\"loader\">\n            <span className=\"loader__text\">Loading...</span>\n          </div>\n        ) : (\n          <div className=\"movies\">\n            {movies.map((\n              movie, // map() : 첫 번째 인자로 컴포넌트를 반환할 함수를 전달한다. movies는 배열이고, 배열의 원소 1개가 movie로 넘어온다.\n            ) => (\n              <Movie\n                key={movie.id}\n                id={movie.id}\n                year={movie.year}\n                title={movie.title}\n                summary={movie.summary}\n                poster={movie.medium_cover_image}\n                genres={movie.genres}\n              />\n            ))}\n          </div>\n        )}\n      </section>\n    );\n  }\n}\n\nexport default Home;\n","import React from 'react';\nimport './Detail.css';\nclass Detail extends React.Component {\n  componentDidMount() {\n    const { location, history } = this.props;\n    if (location.state === undefined) {\n      history.push('/');\n    }\n  }\n  render() {\n    const { location } = this.props;\n    if (location.state) {\n      return (\n        <div className=\"box\">\n          <p>\n            <img src={location.state.poster} alt={location.state.title}></img>\n          </p>\n          <h2>\n            {location.state.year}, {location.state.title}\n          </h2>\n          <p>{location.state.summary}</p>\n        </div>\n      );\n    } else {\n      return null;\n    }\n  }\n}\n\nexport default Detail;\n\n/*\nyear,\ntitle,\nsummary,\nposter,\ngenres\n                 */\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './Navigation.css';\n\nfunction Navigation() {\n  return (\n    <div className=\"nav\">\n      <Link to=\"/\">Home</Link>\n      <Link to=\"/changed\">Changed</Link>\n    </div>\n  );\n}\n\nexport default Navigation;\n","import produce from 'immer';\n\nexport const initialState = {\n  movies: [],\n  isLoading: true,\n\n  loadMovieLoading: false,\n  loadMovieDone: false,\n  loadMovieError: null,\n};\n\nexport const LOAD_MOVIES_REQUEST = 'LOAD_MOVIES_REQUEST';\nexport const LOAD_MOVIES_SUCCESS = 'LOAD_MOVIES_SUCCESS';\nexport const LOAD_MOVIES_FAILURE = 'LOAD_MOVIES_FAILURE';\n\nconst movies = (state = initialState, action) =>\n  produce(state, (draft) => {\n    switch (action.type) {\n      case LOAD_MOVIES_REQUEST: {\n        draft.loadMovieLoading = true;\n        draft.loadMovieDone = false;\n        break;\n      }\n      case LOAD_MOVIES_SUCCESS: {\n        draft.movies = draft.movies.concat(action.data);\n        draft.isLoading = false;\n        draft.loadMovieDone = true;\n        break;\n      }\n      case LOAD_MOVIES_FAILURE: {\n        draft.loadMovieError = action.error;\n        break;\n      }\n      default:\n        return state;\n    }\n  });\n\nexport default movies;\n","import React, { useEffect, useState } from 'react';\nimport './Home.css';\nimport Movie from '../components/Movie';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { LOAD_MOVIES_REQUEST } from '../reducer/movies';\n\nconst HomeChanged = () => {\n  const { isLoading, movies } = useSelector((state) => state.movies);\n  const [pageNumber, setPageNumber] = useState(1);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch({\n      type: LOAD_MOVIES_REQUEST,\n      data: pageNumber,\n    });\n    setPageNumber((pageNumber) => pageNumber + 1);\n  }, [dispatch]);\n\n  const handleScroll = () => {\n    const scrollHeight = document.documentElement.scrollHeight;\n    const scrollTop = document.documentElement.scrollTop;\n    const clientHeight = document.documentElement.clientHeight;\n    if (scrollTop + clientHeight >= scrollHeight) {\n      setPageNumber((pageNumber) => pageNumber + 1);\n      console.log(`pageNumber 업데이트  ${pageNumber}`);\n      // 페이지 끝에 도달하면 추가 데이터를 받아온다\n      dispatch({\n        type: LOAD_MOVIES_REQUEST,\n        data: pageNumber,\n      });\n    }\n  };\n\n  useEffect(() => {\n    // scroll event listener 등록\n    window.addEventListener('scroll', handleScroll);\n    return () => {\n      // scroll event listener 해제\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, [pageNumber, dispatch]);\n\n  return (\n    <section className=\"container\">\n      {isLoading ? (\n        <div>로딩중..</div>\n      ) : (\n        <div className=\"movies\">\n          {movies.map((movie) => (\n            <Movie\n              key={movie.id}\n              id={movie.id}\n              year={movie.year}\n              title={movie.title}\n              summary={movie.summary}\n              poster={movie.medium_cover_image}\n              genres={movie.genres}\n            />\n          ))}\n        </div>\n        // <div>로딩 완료!</div>\n      )}\n    </section>\n  );\n};\n\nexport default HomeChanged;\n","import React from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\nimport Home from './pages/Home';\nimport Detail from './pages/Detail';\nimport Navigation from './components/Navigation';\nimport './App.css';\nimport HomeChanged from './pages/HomeChanged';\n\nfunction App() {\n  return (\n    //Link를 쓰는 Navigation 컴포넌트는 Router 안에 포함시켜줘야 한다!\n    <HashRouter>\n      <Navigation />\n      <Route path=\"/\" exact component={Home} />\n      <Route path=\"/changed\" exact component={HomeChanged} />\n      <Route path=\"/movie/:id\" component={Detail} />\n    </HashRouter>\n  );\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport movies from './movies';\n\nconst rootReducer = combineReducers({\n  movies,\n});\n\nexport default rootReducer;\n\n// 루트 리듀서의 반환값를 유추해줍니다\n// 추후 이 타입을 컨테이너 컴포넌트에서 불러와서 사용해야 하므로 내보내줍니다.\n","import axios from 'axios';\nimport { all, fork, put, takeLatest, call } from 'redux-saga/effects';\nimport { LOAD_MOVIES_FAILURE, LOAD_MOVIES_REQUEST, LOAD_MOVIES_SUCCESS } from '../reducer/movies';\n\nasync function loadMoviesAPI(data) {\n  try {\n    const {\n      data: {\n        data: { movies },\n      },\n    } = await axios.get(`https://yts-proxy.now.sh/list_movies.json?limit=10&&sort_by=download_count&page=${data}`);\n    return movies;\n  } catch (err) {\n    console.error(err);\n    return;\n  }\n}\n\nfunction* loadMovies(action) {\n  // console.log(action.data);\n  const result = yield call(loadMoviesAPI, action.data); // loadMoviesAPI 함수 호출에 의해 return 된 movies 객체\n  // 여기서 잘 불러왔는지 확인\n  // console.log('리턴된 result 출력 :');\n  // console.log(result);\n  try {\n    // console.log('saga loadMovies start!');\n    yield put({\n      type: LOAD_MOVIES_SUCCESS,\n      data: result,\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_MOVIES_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction* watchLoadMovies() {\n  yield takeLatest(LOAD_MOVIES_REQUEST, loadMovies);\n}\n\nexport default function* movieSaga() {\n  yield all([fork(watchLoadMovies)]);\n}\n","import { all, fork } from 'redux-saga/effects';\n\nimport movieSaga from './movies';\n\nexport default function* rootSaga() {\n  yield all([fork(movieSaga)]);\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport rootReducer from './reducer';\n// import logger from 'redux-logger';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from './sagas';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(sagaMiddleware)));\n\nsagaMiddleware.run(rootSaga);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}